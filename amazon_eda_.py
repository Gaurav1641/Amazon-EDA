# -*- coding: utf-8 -*-
"""Amazon EDA .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vqx5rrAl06yxXIxjD26GBZ5R181O2AEr
"""

import pandas as pd
import matplotlib.pyplot as plt
from collections import Counter

# Load the dataset
file_path = r"C:\Users\gaura\Downloads\amazon.csv"
data = pd.read_csv(file_path)

# Data Cleaning
data['rating'] = pd.to_numeric(data['rating'], errors='coerce')
data['rating_count'] = pd.to_numeric(data['rating_count'], errors='coerce')
data['discounted_price'] = data['discounted_price'].str.replace('₹', '').str.replace(',', '').astype(float)
data['actual_price'] = data['actual_price'].str.replace('₹', '').str.replace(',', '').astype(float)
data['discount_percentage'] = data['discount_percentage'].str.replace('%', '').astype(float)

# Remove rows with NaN values in 'category' or 'rating_count'
data_clean = data.dropna(subset=['category', 'rating_count'])

# 2. Top `rating_count` products by category
top_products_by_category = data_clean.loc[data_clean.groupby('category')['rating_count'].idxmax()][['category', 'product_name', 'rating_count']]
print("\nTop Rating Count Products by Category:")
print(top_products_by_category)

# 3. Distribution of discounted prices vs. actual prices
plt.figure(figsize=(10, 6))
plt.hist(data_clean['discounted_price'].dropna(), bins=30, alpha=0.5, label='Discounted Price', color='blue')
plt.hist(data_clean['actual_price'].dropna(), bins=30, alpha=0.5, label='Actual Price', color='orange')
plt.xlabel('Price')
plt.ylabel('Frequency')
plt.title('Distribution of Discounted Prices vs. Actual Prices')
plt.legend()
plt.show()

# 4. Average discount percentage across categories
average_discount = data_clean.groupby('category')['discount_percentage'].mean().sort_values(ascending=False)
print("\nAverage Discount Percentage Across Categories:")
print(average_discount)

# 5. Most popular product names
most_popular_products = data_clean.nlargest(10, 'rating_count')[['product_name', 'rating_count']]
print("\nMost Popular Product Names:")
print(most_popular_products)

# 6. Most popular product keywords
all_keywords = ' '.join(data_clean['product_name'].dropna()).split()
keyword_counts = Counter(all_keywords).most_common(10)
print("\nMost Popular Product Keywords:")
print(keyword_counts)

# 7. Most popular product reviews
most_popular_reviews = data_clean.nlargest(10, 'rating_count')[['review_title', 'review_content', 'rating_count']]
print("\nMost Popular Product Reviews:")
print(most_popular_reviews)

# 8. Correlation between discounted price and rating
correlation = data_clean['discounted_price'].corr(data_clean['rating'])
print(f"\nCorrelation Between Discounted Price and Rating: {correlation}")

# 10. Identify potential areas for improvement
low_rated_products = data_clean[data_clean['rating'] < 3.0][['category', 'product_name', 'rating', 'rating_count']]
print("\nLow-Rated Products That May Need Improvement:")
print(low_rated_products)

